# 指定された対応点（self.mask_list）を赤、その他を緑で描画するプログラム
import cv2
import mediapipe as mp
import json
import os

id = ""  # ランドマークID（データセットの名前など）

class LandmarkDrawer:
    def __init__(self):
        self.mask_list = [
            0, 1, 2, 3, 4, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 32, 36, 37, 38, 39, 40, 41, 42, 43, 44, 
            45, 48, 49, 50, 51, 57, 59, 60, 61, 62, 64, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 
            86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 106, 115, 123, 125, 126, 129, 131, 
            134, 135, 136, 137, 138, 140, 141, 142, 146, 147, 148, 149, 150, 152, 164, 165, 166, 167, 169, 170, 
            171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 191, 192, 194, 195, 198, 199, 
            200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 
            235, 236, 237, 238, 239, 240, 241, 242, 248, 250, 262, 266, 267, 268, 269, 270, 271, 272, 273, 274, 
            275, 278, 279, 280, 281, 287, 289, 290, 291, 292, 294, 302, 303, 304, 305, 306, 307, 308, 309, 310, 
            311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 
            335, 344, 352, 354, 355, 358, 360, 363, 364, 365, 366, 367, 369, 370, 371, 375, 376, 377, 378, 379, 
            391, 392, 393, 394, 395, 396, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 415, 416, 
            418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 
            440, 455, 456, 457, 458, 459, 460, 461, 462
        ]

    def draw_landmarks(self, image_path, json_path, output_path):

        #id = "maskless2_face"
        
        # 画像の読み込み
        image = cv2.imread(image_path)
        h, w, _ = image.shape  # 画像の高さと幅を取得

        # JSONファイルの読み込み
        with open(json_path, 'r') as f:
            landmarks_data = json.load(f)

        # ランドマークデータの抽出
        landmarks = landmarks_data[id]

        # MediaPipe顔ランドマークの描画
        for idx, lm in enumerate(landmarks):
            cx, cy = int(lm["x"] * w), int(lm["y"] * h)

            # 赤いランドマーク：mask_listのインデックスに対応するもの
            if idx in self.mask_list:
                color = (0, 0, 255)  # 赤色
            else:
                color = (0, 255, 0)  # 緑色

            # ランドマークを描画
            cv2.circle(image, (cx, cy), 2, color, -1)

        # 出力画像の保存
        cv2.imwrite(output_path, image)

        # 画像表示
        cv2.imshow("Landmarks", image)
        cv2.waitKey(0)
        cv2.destroyAllWindows()

        print(f"ランドマーク画像が保存されました: {output_path}")



# 使用例

image_path = f""  # 画像のパス
json_path = f""  # JSONファイルのパス
output_path = f""  # 出力画像のパス

drawer = LandmarkDrawer()
drawer.draw_landmarks(image_path, json_path, output_path)

